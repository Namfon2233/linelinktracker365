// backend/routes/logRoutes.js
const express = require('express');
const router = express.Router();
const fs = require('fs');
const path = require('path');

// üîÑ ‡πÇ‡∏´‡∏•‡∏î log ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå logs.json
router.get('/', (req, res) => {
  try {
    const logsPath = path.join(__dirname, '../data/logs.json');
    const logs = JSON.parse(fs.readFileSync(logsPath, 'utf-8'));
    res.json(logs);
  } catch (error) {
    console.error('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î logs ‡πÑ‡∏î‡πâ:', error);
    res.status(500).json({ error: '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î logs ‡πÑ‡∏î‡πâ' });
  }
});

// üìù ‡πÄ‡∏û‡∏¥‡πà‡∏° log ‡πÉ‡∏´‡∏°‡πà
router.post('/', (req, res) => {
  try {
    const newLog = req.body;
    const logsPath = path.join(__dirname, '../data/logs.json');

    // ‡∏≠‡πà‡∏≤‡∏ô log ‡πÄ‡∏Å‡πà‡∏≤
    let logs = [];
    if (fs.existsSync(logsPath)) {
      logs = JSON.parse(fs.readFileSync(logsPath, 'utf-8'));
    }

    logs.push(newLog);
    fs.writeFileSync(logsPath, JSON.stringify(logs, null, 2), 'utf-8');

    res.status(201).json({ message: '‡πÄ‡∏û‡∏¥‡πà‡∏° log ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à' });
  } catch (error) {
    console.error('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏° log ‡πÑ‡∏î‡πâ:', error);
    res.status(500).json({ error: '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏° log ‡πÑ‡∏î‡πâ' });
  }
});

module.exports = router;
